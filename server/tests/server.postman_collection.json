{
	"info": {
		"_postman_id": "79d6c332-3b12-42a2-9ac5-8e475d36c9e7",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CafeWithCategoryTests",
			"item": [
				{
					"name": "Post a category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c3be9ca-fe7b-43d0-a540-546e5ccb3cc1",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dog friendly\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Dog friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8d36e4c-4268-41a1-8607-6de744c8fe4d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id2\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Gluten free\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Gluten free\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a third category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e1e673b-83ad-4862-bc4a-a231e03dec73",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id3\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Vegan friendly\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Vegan friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a cafe with category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f66261d3-32db-49b9-b046-4e5305f35c11",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id\", cafeId);\r",
									"var category_id = pm.environment.get(\"category_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe1\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"10:20-14:40\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Avenyn\");\r",
									"    pm.expect(jsonData.price).to.eql(3);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe1@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe1.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0000000000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe1\",\r\n    \"openingHours\": \"10:20-14:40\",\r\n    \"location\": \"Avenyn\",\r\n    \"price\": 3,\r\n    \"contact\": { \r\n        \"email\" : \"cafe1@gmail.com\",\r\n        \"website\": \"cafe1.com\",\r\n        \"phoneNumber\": \"0000000000\"\r\n    },\r\n    \"categories\": [{\"_id\": \"{{category_id}}\"}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second cafe  with category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b2e1b7f-4719-45b3-aea7-929388eda74a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id2\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe2\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"12:20-22:30\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Hjalmar\");\r",
									"    pm.expect(jsonData.price).to.eql(2);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe2@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe2.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0055500000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe2\",\r\n    \"openingHours\": \"12:20-22:30\",\r\n    \"location\": \"Hjalmar\",\r\n    \"price\": 2,\r\n    \"contact\": { \r\n        \"email\" : \"cafe2@gmail.com\",\r\n        \"website\": \"cafe2.com\",\r\n        \"phoneNumber\": \"0055500000\"\r\n    },\r\n    \"categories\": [{\"_id\": \"{{category_id}}\"}, {\"_id\": \"{{category_id3}}\"}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a third cafe  with category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1c55dd1-5dea-46fb-8b69-7f11df1807d4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id3\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe3\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"09:30-23:30\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Norra Hamngatan\");\r",
									"    pm.expect(jsonData.price).to.eql(1);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe3@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe3.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"00165465000\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe3\",\r\n    \"openingHours\": \"09:30-23:30\",\r\n    \"location\": \"Norra Hamngatan\",\r\n    \"price\": 1,\r\n    \"contact\": { \r\n        \"email\" : \"cafe3@gmail.com\",\r\n        \"website\": \"cafe3.com\",\r\n        \"phoneNumber\": \"00165465000\"\r\n    },\r\n    \"categories\": [{\"_id\": \"{{category_id2}}\"}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cafes  with category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "10a52785-4e3c-487f-bcfa-6de47dec5e76",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "28f921cb-e887-4c35-9102-aa8e27e51722",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"var cafe_id2 = pm.environment.get(\"cafe_id2\");\r",
									"var cafe_id3 = pm.environment.get(\"cafe_id3\");\r",
									"var category_id = pm.environment.get(\"category_id\");\r",
									"var category_id2 = pm.environment.get(\"category_id2\");\r",
									"var category_id3 = pm.environment.get(\"category_id3\");\r",
									"\r",
									"pm.test(\"All cafes retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"cafes\": [\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe1@gmail.com\",\r",
									"                \"website\": \"cafe1.com\",\r",
									"                \"phoneNumber\": \"0000000000\"\r",
									"            },\r",
									"            \"categories\": [\r",
									"                {\r",
									"                    \"_id\": category_id,\r",
									"                    \"name\": \"Dog friendly\",\r",
									"                    \"__v\": 0\r",
									"                }\r",
									"            ],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id,\r",
									"            \"name\": \"cafe1\",\r",
									"            \"openingHours\": \"10:20-14:40\",\r",
									"            \"location\": \"Avenyn\",\r",
									"            \"price\": 3,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe2@gmail.com\",\r",
									"                \"website\": \"cafe2.com\",\r",
									"                \"phoneNumber\": \"0055500000\"\r",
									"            },\r",
									"            \"categories\": [\r",
									"                {\r",
									"                    \"_id\": category_id,\r",
									"                    \"name\": \"Dog friendly\",\r",
									"                    \"__v\": 0\r",
									"                },\r",
									"                {\r",
									"                    \"_id\": category_id3,\r",
									"                    \"name\": \"Vegan friendly\",\r",
									"                    \"__v\": 0\r",
									"                }\r",
									"            ],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id2,\r",
									"            \"name\": \"cafe2\",\r",
									"            \"openingHours\": \"12:20-22:30\",\r",
									"            \"location\": \"Hjalmar\",\r",
									"            \"price\": 2,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe3@gmail.com\",\r",
									"                \"website\": \"cafe3.com\",\r",
									"                \"phoneNumber\": \"00165465000\"\r",
									"            },\r",
									"            \"categories\": [\r",
									"                {\r",
									"                    \"_id\": category_id2,\r",
									"                    \"name\": \"Gluten free\",\r",
									"                    \"__v\": 0\r",
									"                }\r",
									"            ],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id3,\r",
									"            \"name\": \"cafe3\",\r",
									"            \"openingHours\": \"09:30-23:30\",\r",
									"            \"location\": \"Norra Hamngatan\",\r",
									"            \"price\": 1,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cafes with price filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "08296951-2693-42e9-96ad-d6aad456af64",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39ced068-3f82-4e96-89de-7a14981118bd",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"var category_id = pm.environment.get(\"category_id\");\r",
									"\r",
									"pm.test(\"All cafes retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"cafes\": [\r",
									"    {\r",
									"        \"contact\": {\r",
									"            \"email\": \"cafe1@gmail.com\",\r",
									"            \"website\": \"cafe1.com\",\r",
									"            \"phoneNumber\": \"0000000000\"\r",
									"        },\r",
									"        \"categories\": [\r",
									"            {\r",
									"                \"_id\": category_id,\r",
									"                \"name\": \"Dog friendly\",\r",
									"                \"__v\": 0\r",
									"            }\r",
									"        ],\r",
									"        \"reviews\": [],\r",
									"        \"_id\": cafe_id,\r",
									"        \"name\": \"cafe1\",\r",
									"        \"openingHours\": \"10:20-14:40\",\r",
									"        \"location\": \"Avenyn\",\r",
									"        \"price\": 3,\r",
									"        \"__v\": 0\r",
									"    }\r",
									"]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/cafes?price=3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							],
							"query": [
								{
									"key": "price",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cafe by id  with category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d39884d-6d15-45c9-8262-a854dd428cc3",
								"exec": [
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"var category_id = pm.environment.get(\"category_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.body({\r",
									"        \"contact\": {\r",
									"            \"email\": \"cafe1@gmail.com\",\r",
									"            \"website\": \"cafe1.com\",\r",
									"            \"phoneNumber\": \"0000000000\"\r",
									"        },\r",
									"        \"categories\": [\r",
									"            {\r",
									"                \"_id\": category_id,\r",
									"                \"name\": \"Dog friendly\",\r",
									"                \"__v\": 0\r",
									"            }\r",
									"        ],\r",
									"        \"reviews\": [],\r",
									"        \"_id\": cafe_id,\r",
									"        \"name\": \"cafe1\",\r",
									"        \"openingHours\": \"10:20-14:40\",\r",
									"        \"location\": \"Avenyn\",\r",
									"        \"price\": 3,\r",
									"        \"__v\": 0\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all cafes  with category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ea531ed-536f-439b-b460-3e6f80cf3649",
								"exec": [
									"pm.test(\"All cafes deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "895709cf-1687-45b0-beea-e5299eb14ef0",
								"exec": [
									"pm.test(\"All categories deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CategoryTests",
			"item": [
				{
					"name": "Post a category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0452b52-91eb-4e75-a747-3b929711f3e6",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dog friendly\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Dog friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ffb8e59-1d2a-4ba1-8fb5-47bb4252c4ab",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id2\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Gluten free\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Gluten free\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a third category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb7bba06-16ac-484d-b3a8-55f889f89c12",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var categoryId = jsonData._id;\r",
									"pm.environment.set(\"category_id3\", categoryId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Vegan friendly\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Vegan friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all categories",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27476ac1-293e-444f-8ce9-feed38a4b3f5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "518cc31f-c874-4d68-bdd6-4d6b54ddab32",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var category_id = pm.environment.get(\"category_id\");\r",
									"var category_id2 = pm.environment.get(\"category_id2\");\r",
									"var category_id3 = pm.environment.get(\"category_id3\");\r",
									"\r",
									"pm.test(\"All categories retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"categories\": [\r",
									"        {\r",
									"            \"_id\": category_id,\r",
									"            \"name\": \"Dog friendly\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": category_id2,\r",
									"            \"name\": \"Gluten free\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": category_id3,\r",
									"            \"name\": \"Vegan friendly\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get category by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94bcb85e-7f57-4b27-b772-bdbffe404134",
								"exec": [
									"var category_id = pm.environment.get(\"category_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.name).to.eql(\"Dog friendly\");\r",
									"    pm.expect(jsonData._id).to.eql(category_id);\r",
									"\t});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories/{{category_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5473cb6a-6a2b-43eb-9aeb-54b1afb5f9c5",
								"exec": [
									"var category_id = pm.environment.get(\"category_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.name).to.eql(\"Cat friendly\");\r",
									"    pm.expect(jsonData._id).to.eql(category_id);\r",
									"\t});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"Cat friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories/{{category_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete category by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "149cb83e-d1da-442c-b439-eb1b47389ec2",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Category deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories/{{category_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df6a1d29-af02-49b7-87f2-e6712faf33a5",
								"exec": [
									"pm.test(\"All categories deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent category by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa30399e-1644-4927-9166-c797df45d366",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch non-existent category by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2cd77f6-79f4-43bc-9411-6d82b058bc74",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"Cat friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non-existent category by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1993e3ed-dc1b-43da-896e-07fce27fec0e",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/categories/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"0doesnotexist"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UserTests",
			"item": [
				{
					"name": "Post a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fcbd77a-fdfd-4804-a4b4-b3a2989ab203",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.email).to.eql(\"hello@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"123\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"hello@gmail.com\",\r\n\"password\" : \"123\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4def33df-bf62-4409-9687-5ece8e65a69d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id2\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.email).to.eql(\"hello1@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"1234\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"hello1@gmail.com\",\r\n\"password\" : \"1234\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a third user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "846ca632-8056-49f2-b3c9-e7a3a2a72bdc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id3\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.email).to.eql(\"hello12@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"12345\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"hello12@gmail.com\",\r\n\"password\" : \"12345\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5d46edbb-abf8-46a1-ac8e-0a8ca7ac77c0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f109e44c-36a7-4cc5-a630-6e5ed5bbbfed",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var user_id = pm.environment.get(\"user_id\");\r",
									"var user_id2 = pm.environment.get(\"user_id2\");\r",
									"var user_id3 = pm.environment.get(\"user_id3\");\r",
									"\r",
									"pm.test(\"All users retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"     \"users\": [\r",
									"        {\r",
									"            \"_id\": user_id,\r",
									"            \"email\": \"hello@gmail.com\",\r",
									"            \"password\": \"123\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": user_id2,\r",
									"            \"email\": \"hello1@gmail.com\",\r",
									"            \"password\": \"1234\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": user_id3,\r",
									"            \"email\": \"hello12@gmail.com\",\r",
									"            \"password\": \"12345\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8dec5070-7bed-432b-bdd7-8e0e11f68c81",
								"exec": [
									"var user_id = pm.environment.get(\"user_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.email).to.eql(\"hello@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"123\");\r",
									"    pm.expect(jsonData._id).to.eql(user_id);\r",
									"\t});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c6cecfe-58d3-461c-870f-5bd00b9c4cb1",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.email).to.eql(\"bye@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"0987\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"bye@gmail.com\",\r\n\"password\" : \"0987\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3351293a-3796-4426-bd4f-2351c98f5cbc",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"User deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7cfb71e-3496-4fc3-b37c-4dbe646551ba",
								"exec": [
									"pm.test(\"All users deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "202d249e-2c3a-427f-9563-90567431f1a1",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non-existent user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ddb1610-179d-4cb6-b409-4a1994c4a89f",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put non-existent user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cba9d4cb-36a9-4382-a4c7-50073b45e02b",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"Cat friendly\",\r\n\"password\" : \"tello\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"0doesnotexist"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CafeTests",
			"item": [
				{
					"name": "Post a cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "567ad041-1828-4d39-9621-e3aa5ac4446a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe1\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"10:20-14:40\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Avenyn\");\r",
									"    pm.expect(jsonData.price).to.eql(3);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe1@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe1.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0000000000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe1\",\r\n    \"openingHours\": \"10:20-14:40\",\r\n    \"location\": \"Avenyn\",\r\n    \"price\": 3,\r\n    \"contact\": { \r\n        \"email\" : \"cafe1@gmail.com\",\r\n        \"website\": \"cafe1.com\",\r\n        \"phoneNumber\": \"0000000000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6b78e7-fc87-4c60-b73c-c6330d3644dc",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id2\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe2\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"12:20-22:30\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Hjalmar\");\r",
									"    pm.expect(jsonData.price).to.eql(2);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe2@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe2.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0055500000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe2\",\r\n    \"openingHours\": \"12:20-22:30\",\r\n    \"location\": \"Hjalmar\",\r\n    \"price\": 2,\r\n    \"contact\": { \r\n        \"email\" : \"cafe2@gmail.com\",\r\n        \"website\": \"cafe2.com\",\r\n        \"phoneNumber\": \"0055500000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a third cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d65b3bf-e6f1-4809-a3c4-3ddf861b4a50",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id3\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe3\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"09:30-23:30\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Norra Hamngatan\");\r",
									"    pm.expect(jsonData.price).to.eql(1);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe3@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe3.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"00165465000\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe3\",\r\n    \"openingHours\": \"09:30-23:30\",\r\n    \"location\": \"Norra Hamngatan\",\r\n    \"price\": 1,\r\n    \"contact\": { \r\n        \"email\" : \"cafe3@gmail.com\",\r\n        \"website\": \"cafe3.com\",\r\n        \"phoneNumber\": \"00165465000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cafes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "12ea79b2-b510-47de-a45a-31c995781f5b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "857eb98f-a310-4776-9813-476af83c730c",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"var cafe_id2 = pm.environment.get(\"cafe_id2\");\r",
									"var cafe_id3 = pm.environment.get(\"cafe_id3\");\r",
									"\r",
									"pm.test(\"All cafes retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"cafes\": [\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe1@gmail.com\",\r",
									"                \"website\": \"cafe1.com\",\r",
									"                \"phoneNumber\": \"0000000000\"\r",
									"            },\r",
									"            \"categories\": [],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id,\r",
									"            \"name\": \"cafe1\",\r",
									"            \"openingHours\": \"10:20-14:40\",\r",
									"            \"location\": \"Avenyn\",\r",
									"            \"price\": 3,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe2@gmail.com\",\r",
									"                \"website\": \"cafe2.com\",\r",
									"                \"phoneNumber\": \"0055500000\"\r",
									"            },\r",
									"            \"categories\": [],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id2,\r",
									"            \"name\": \"cafe2\",\r",
									"            \"openingHours\": \"12:20-22:30\",\r",
									"            \"location\": \"Hjalmar\",\r",
									"            \"price\": 2,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"contact\": {\r",
									"                \"email\": \"cafe3@gmail.com\",\r",
									"                \"website\": \"cafe3.com\",\r",
									"                \"phoneNumber\": \"00165465000\"\r",
									"            },\r",
									"            \"categories\": [],\r",
									"            \"reviews\": [],\r",
									"            \"_id\": cafe_id3,\r",
									"            \"name\": \"cafe3\",\r",
									"            \"openingHours\": \"09:30-23:30\",\r",
									"            \"location\": \"Norra Hamngatan\",\r",
									"            \"price\": 1,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cafe by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83881cad-c2d3-4fcc-9b62-a9e35430f45f",
								"exec": [
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe1\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"10:20-14:40\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Avenyn\");\r",
									"    pm.expect(jsonData.price).to.eql(3);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe1@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe1.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0000000000\");\r",
									"    pm.expect(jsonData._id).to.eql(cafe_id);\r",
									"\t});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put a cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d78c56f-2b17-4a55-ad05-743d18b6d8da",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe11\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"11:20-16:40\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Postgatan\");\r",
									"    pm.expect(jsonData.price).to.eql(2);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe11@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe11.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"00112343100000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe11\",\r\n    \"openingHours\": \"11:20-16:40\",\r\n    \"location\": \"Postgatan\",\r\n    \"price\": 2,\r\n    \"contact\": { \r\n        \"email\" : \"cafe11@gmail.com\",\r\n        \"website\": \"cafe11.com\",\r\n        \"phoneNumber\": \"00112343100000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch a cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfda3bab-31c6-466b-9c28-d57154d0e69b",
								"exec": [
									"var cafe_id = pm.environment.get(\"cafe_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct category response\", function () {\r",
									"\tvar jsonData = pm.response.json();\r",
									"\tpm.expect(jsonData.name).to.eql(\"cafe55\");\r",
									"    pm.expect(jsonData._id).to.eql(cafe_id);\r",
									"\t});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"cafe55\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cafe by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eae308fa-8b4a-4595-bdab-96bfc6549730",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Cafe deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all cafes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fae748b-3977-474f-80fd-dd876350a141",
								"exec": [
									"pm.test(\"All cafes deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent cafe by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0ecb090-710e-4409-85fa-5ae6c4597447",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put non-existent user cafe id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6808549b-a2f8-4fea-b7d1-b57230d31545",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe11\",\r\n    \"openingHours\": \"11:20-16:40\",\r\n    \"location\": \"Postgatan\",\r\n    \"price\": 2,\r\n    \"contact\": { \r\n        \"email\" : \"cafe11@gmail.com\",\r\n        \"website\": \"cafe11.com\",\r\n        \"phoneNumber\": \"00112343100000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch non-existent cafe by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d74770f6-17bf-4631-887e-36dcacfb71a6",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"Cat friendly\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non-existent cafe by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03aeebb1-761a-42b8-82de-a1f9d07090db",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ReviewTests",
			"item": [
				{
					"name": "Post a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c044b51-fc83-4d55-b4a6-4920ec52fd7a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.email).to.eql(\"hello@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"123\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"hello@gmail.com\",\r\n\"password\" : \"123\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e82fd052-cc53-48d4-b4f1-aeade6509a6c",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = jsonData._id;\r",
									"pm.environment.set(\"cafe_id\", cafeId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct cafe response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"cafe1\");\r",
									"    pm.expect(jsonData.openingHours).to.eql(\"10:20-14:40\");\r",
									"    pm.expect(jsonData.location).to.eql(\"Avenyn\");\r",
									"    pm.expect(jsonData.price).to.eql(3);\r",
									"    pm.expect(jsonData.contact.email).to.eql(\"cafe1@gmail.com\");\r",
									"    pm.expect(jsonData.contact.website).to.eql(\"cafe1.com\");\r",
									"    pm.expect(jsonData.contact.phoneNumber).to.eql(\"0000000000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"name\" : \"cafe1\",\r\n    \"openingHours\": \"10:20-14:40\",\r\n    \"location\": \"Avenyn\",\r\n    \"price\": 3,\r\n    \"contact\": { \r\n        \"email\" : \"cafe1@gmail.com\",\r\n        \"website\": \"cafe1.com\",\r\n        \"phoneNumber\": \"0000000000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31bec904-cc30-4920-917e-40c3abf89dd8",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = pm.environment.get(\"cafe_id\");\r",
									"var userId = pm.environment.get(\"user_id\");\r",
									"var reviewId = jsonData._id;\r",
									"pm.environment.set(\"review_id\", reviewId);\r",
									"var reviewDate = jsonData.date;\r",
									"pm.environment.set(\"review_date\", reviewDate);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct review response\", function () {\r",
									"    pm.expect(jsonData.rating).to.eql(5);\r",
									"    pm.expect(jsonData.comment).to.eql(\"Best cafe ever!\");\r",
									"    pm.expect(jsonData.user).to.eql(userId);\r",
									"    pm.expect(jsonData.cafe).to.eql(cafeId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"rating\" : 5,\r\n    \"comment\": \"Best cafe ever!\",\r\n    \"user\": \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a second review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9d6641c-ac77-4dfe-a2a9-9cf61fb483b4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var cafeId = pm.environment.get(\"cafe_id\");\r",
									"var userId = pm.environment.get(\"user_id\");\r",
									"var reviewId = jsonData._id;\r",
									"pm.environment.set(\"review_id2\", reviewId);\r",
									"var reviewDate = jsonData.date;\r",
									"pm.environment.set(\"review_date2\", reviewDate);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct review response\", function () {\r",
									"    pm.expect(jsonData.rating).to.eql(1);\r",
									"    pm.expect(jsonData.comment).to.eql(\"Worst cafe ever!\");\r",
									"    pm.expect(jsonData.user).to.eql(userId);\r",
									"    pm.expect(jsonData.cafe).to.eql(cafeId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \"rating\" : 1,\r\n    \"comment\": \"Worst cafe ever!\",\r\n    \"user\": \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all reviews for a cafe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "861eb256-b3ef-4bab-a6df-963fa8d2cd45",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4ca0900d-d57b-41c5-9a04-cbba7e5d5423",
								"exec": [
									"var jsonBody = pm.response.json();\r",
									"var userId = pm.environment.get(\"user_id\");\r",
									"var reviewId = pm.environment.get(\"review_id\");\r",
									"var reviewId2 = pm.environment.get(\"review_id2\");\r",
									"var reviewDate = pm.environment.get(\"review_date\");\r",
									"var reviewDate2 = pm.environment.get(\"review_date2\");\r",
									"\r",
									"pm.test(\"All reviews for a cafe retrieved\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"reviews\": [\r",
									"        {\r",
									"            \"_id\": reviewId,\r",
									"            \"rating\": 5,\r",
									"            \"comment\": \"Best cafe ever!\",\r",
									"            \"user\": userId,\r",
									"            \"date\": reviewDate,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": reviewId2,\r",
									"            \"rating\": 1,\r",
									"            \"comment\": \"Worst cafe ever!\",\r",
									"            \"user\": userId,\r",
									"            \"date\": reviewDate2,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a cafe review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3637a967-c78f-45cd-8400-5b2c370d5ee6",
								"exec": [
									"var reviewId = pm.environment.get(\"review_id\");\r",
									"var userId = pm.environment.get(\"user_id\");\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct review response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.rating).to.eql(5);\r",
									"    pm.expect(jsonData.comment).to.eql(\"Best cafe ever!\");\r",
									"    pm.expect(jsonData.user._id).to.eql(userId);\r",
									"    pm.expect(jsonData._id).to.eql(reviewId);\r",
									"\t});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews/{{review_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews",
								"{{review_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17f7af73-4ccc-4e0d-a381-0577723634ff",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Cafe deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews/{{review_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews",
								"{{review_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all cafes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7192dcf-97cb-4f09-b466-2c3579075667",
								"exec": [
									"pm.test(\"All cafes deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "991af2a3-eb55-4754-ba7d-b516be382e79",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"User deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c056ef1-91b0-4087-ac01-0ab63dd2aa2f",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"User deleted\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent cafe review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c51e6efd-395a-4e40-b6f8-c623e75c62cf",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent review for non-existent cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c1e5bbf-7103-4850-9336-86345043cafb",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist/reviews/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist",
								"reviews",
								"0doesnotexist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get reviews for non-existent cafe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44637fb1-3f1f-47d3-ba51-84257725d837",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/0doesnotexist/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"0doesnotexist",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non-existent review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c81c72d-f886-4ec9-b22b-fb7c3e7901b3",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cafes/{{cafe_id}}/reviews/0doesnotexist",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cafes",
								"{{cafe_id}}",
								"reviews",
								"0doesnotexist"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "275a0b66-5d6a-4822-8de7-9e6600c909f7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "806703cf-7a33-4308-a056-ecba2d736f67",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}